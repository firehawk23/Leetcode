{"id":464549109,"lang":"python3","time":"1 year, 5 months","timestamp":1615091311,"status_display":"Accepted","runtime":"1060 ms","url":"/submissions/detail/464549109/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"17.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def detectCycle(self, head: ListNode) -> ListNode:\n        if head==None :\n            return head\n        slow =  head\n        l=[]\n        while slow :\n            l.append(slow)\n            slow= slow.next\n            if slow in l:\n                return slow\n        return","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}