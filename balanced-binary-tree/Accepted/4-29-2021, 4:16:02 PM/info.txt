{"id":486641936,"lang":"python3","time":"1 year, 3 months","timestamp":1619693162,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/486641936/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"19 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isBalanced(self, root: TreeNode) -> bool:\n        self.flag = True\n        def dfs(node):\n            if node is None:\n                return 0\n            d1 = dfs(node.left)\n            d2 = dfs(node.right)\n            \n            if abs(d1-d2)>1:\n                self.flag = False\n                return float('inf')\n            return max(d1,d2)+1\n        dfs(root)\n        return self.flag","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}