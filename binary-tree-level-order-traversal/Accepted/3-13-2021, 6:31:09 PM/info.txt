{"id":467217067,"lang":"python3","time":"1 year, 4 months","timestamp":1615640469,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/467217067/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root:\n            return []\n        q =[root]\n        level = []\n        while q:\n            l,bfs = [],[]\n            for i in q:\n                l.append(i.val)\n                if i.left:\n                    bfs.append(i.left)\n                if i.right:\n                    bfs.append(i.right)\n            q=bfs\n            level.append(l)\n        return level\n                    \n        \n        ","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}