{"id":466301171,"lang":"java","time":"1 year, 5 months","timestamp":1615440052,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/466301171/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"49 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public boolean isPalindrome(ListNode head) {\n        ListNode s = head;\n        ListNode f = head;\n        while(f!=null && f.next!=null){\n            f = f.next.next;\n            s = s.next;\n        }\n        s = reversed(s);\n        f =head;\n        while(s!=null){\n            if(s.val!=f.val){\n                return false;\n            }\n            s = s.next;\n            f = f.next;\n        }\n        return true;\n    }\n    \n    public ListNode reversed(ListNode head){\n        ListNode p =null;\n        while(head!=null){\n            ListNode n = head.next;\n            head.next=p;\n            p = head;\n            head = n;\n        }\n        return p;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}