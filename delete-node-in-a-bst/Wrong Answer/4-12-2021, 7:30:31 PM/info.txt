{"id":479722678,"lang":"python3","time":"1 year, 3 months","timestamp":1618236031,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/479722678/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def deleteNode(self, root: TreeNode, key: int) -> TreeNode:\n        if not root:\n            return\n        if key<root.val:\n            root.left = self.deleteNode(root.left,key)\n            return root\n        elif key>root.val:\n            root.right = self.deleteNode(root.right,key)\n            return root\n        else:\n            small = self.findSmall(root.right)\n            if not small:\n                return root.left\n            small.left = root.left\n            return root.right\n            \n    def findSmall(self,root):\n        if not root:\n            return\n        while root:\n            root = root.left\n        return root","compare_result":"0111101000001110110011011100111100100001110100000111010111100100111001100000101001100001000","title_slug":"delete-node-in-a-bst"}