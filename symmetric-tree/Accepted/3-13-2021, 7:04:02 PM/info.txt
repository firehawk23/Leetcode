{"id":467224541,"lang":"python3","time":"1 year, 4 months","timestamp":1615642442,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/467224541/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if not root:\n            return True\n        return self.isSym(root.left,root.right)\n    \n    def isSym(self,root1: TreeNode,root2: TreeNode):\n        if not root1 and not root2:\n            return True\n        if not root1 or not root2:\n            return False\n        if root1.val != root2.val:\n            return False\n        return (self.isSym(root1.left,root2.right) and self.isSym(root1.right,root2.left))","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}