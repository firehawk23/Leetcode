{"id":467225522,"lang":"python3","time":"1 year, 4 months","timestamp":1615642687,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/467225522/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if not root:\n            return True\n        def isSym(root1,root2):\n            if not root1 and not root2:\n                return True\n            if not root1 or not root2:\n                return False\n            if root1.val != root2.val:\n                return False\n            return isSym(root1.left,root2.right) and isSym(root1.right,root2.left)\n        return isSym(root.left,root.right)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}