{"id":467222462,"lang":"python3","time":"1 year, 4 months","timestamp":1615641911,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/467222462/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if not root:\n            return True\n        return self.isym(root.left,root.right)\n    \n    def isym(self,root1: TreeNode,root2: TreeNode):\n        if not root1 and not root2:\n            return True\n        if root1.val != root2.val:\n            return False\n        if not root1 or not root2:\n            return False\n        return (self.isym(root1.left,root2.right) and self.isym(root1.right,root2.left))","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"symmetric-tree"}