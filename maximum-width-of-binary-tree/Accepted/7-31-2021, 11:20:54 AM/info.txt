{"id":530926714,"lang":"python3","time":"1Â year","timestamp":1627710654,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/530926714/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"20.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def widthOfBinaryTree(self, root: TreeNode) -> int:\n        self.d = defaultdict(list)\n        def f(l, p, r):\n            if r:\n                self.d[l].append(p)\n                f(l + 1, 2 * p, r.left)\n                f(l + 1, 2 * p + 1, r.right)\n        f(0, 0, root)\n        return max(max(value) - min(value) + 1 for value in self.d.values())","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-of-binary-tree"}