{"id":465890217,"lang":"python3","time":"1 year, 5 months","timestamp":1615355204,"status_display":"Accepted","runtime":"172 ms","url":"/submissions/detail/465890217/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"29.3 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        if not headA or not headB:\n            return None\n        a,b = headA,headB\n        while(a!=b):\n            if not a:\n                a = headB\n            else:\n                a= a.next\n            if not b:\n                b = headA\n            else:\n                b=b.next\n        return a","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}