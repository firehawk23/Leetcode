{"id":685787183,"lang":"python3","time":"3 months, 2 weeks","timestamp":1650690852,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/685787183/","is_pending":"Not Pending","title":"Encode and Decode TinyURL","memory":"13.9 MB","code":"class Codec:\n    def __init__(self):\n        self.hm = {}\n        self.count = -1\n        \n    def encode(self, longUrl: str) -> str:\n        \"\"\"Encodes a URL to a shortened URL.\n        \"\"\"\n        self.count += 1\n        self.hm[self.count] = longUrl\n        return \"http://tinyurl.com/\" + str(self.count)\n        \n\n    def decode(self, shortUrl: str) -> str:\n        \"\"\"Decodes a shortened URL to its original URL.\n        \"\"\"\n        n = len(\"http://tinyurl.com/\")\n        val = int(shortUrl[n:])\n        return self.hm[val]\n\n# Your Codec object will be instantiated and called as such:\n# codec = Codec()\n# codec.decode(codec.encode(url))","compare_resulttitle_slug":"encode-and-decode-tinyurl"}