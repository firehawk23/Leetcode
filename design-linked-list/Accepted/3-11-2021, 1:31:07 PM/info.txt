{"id":466360816,"lang":"python3","time":"1 year, 5 months","timestamp":1615449667,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/466360816/","is_pending":"Not Pending","title":"Design Linked List","memory":"15.3 MB","code":"class Node(object):\n    def __init__(self, val):\n        self.val = val\n        self.next = None\n        self.prev = None\n\n\nclass MyLinkedList(object):\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.dummy_head = Node(0)\n        self.dummy_tail = Node(0)\n        self.dummy_tail.prev = self.dummy_head\n        self.dummy_head.next = self.dummy_tail\n        self.size = 0\n\n    def get(self, index):\n        if index < 0 or index >= self.size:\n            return -1\n        curr_node = self.dummy_head.next\n        for __ in range(index):\n            curr_node = curr_node.next\n        return curr_node.val\n\n    def addAtHead(self, val):\n        node = Node(val)\n        node.next = self.dummy_head.next\n        node.prev = self.dummy_head\n        self.dummy_head.next.prev = node\n        self.dummy_head.next = node\n\n        self.size += 1\n\n    def addAtTail(self, val):\n        node = Node(val)\n        node.prev = self.dummy_tail.prev\n        node.next = self.dummy_tail\n        self.dummy_tail.prev.next = node\n        self.dummy_tail.prev = node\n\n        self.size += 1\n\n    def addAtIndex(self, index, val):\n        if index < 0 or index > self.size:\n            return\n        if index == 0:\n            self.addAtHead(val)\n        elif index == self.size:\n            self.addAtTail(val)\n        else:\n            curr_node = self.dummy_head.next\n            for __ in range(index - 1):\n                curr_node = curr_node.next\n            node = Node(val)\n            node.next = curr_node.next\n            node.prev = curr_node\n            curr_node.next.prev = node\n            curr_node.next = node\n\n            self.size += 1\n\n    def deleteAtIndex(self, index):\n        if index < 0 or index >= self.size:\n            return\n\n        curr_node = self.dummy_head\n        for __ in range(index):\n            curr_node = curr_node.next\n        curr_node.next.next.prev = curr_node\n        curr_node.next = curr_node.next.next\n\n        self.size -= 1","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"design-linked-list"}